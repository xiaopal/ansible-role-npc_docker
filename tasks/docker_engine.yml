---
- name: setup npc-docker.fact
  block: 
    - name: ensure '/etc/ansible/facts.d'
      file: state=directory recurse=yes path=/etc/ansible/facts.d
    - name: copy npc_docker.fact
      copy: src=npc_docker.sh dest=/etc/ansible/facts.d/npc_docker.fact mode=0755
      register: copy_result
    - name: reload ansible_local
      when: copy_result.changed
      setup: filter=ansible_local
    
- name: enable docker-ce
  vars:
    docker_version: '{{docker_engine.version |
      default(docker_engine|string|ternary(docker_engine, ""), true)}}'
  when: not (ansible_local.npc_docker.is_installed and 
    ansible_local.npc_docker.version.startswith( docker_version ))
  block: 
    - name: update /etc/apt/sources.list
      copy: 
        dest: /etc/apt/sources.list
        content: |
          deb {{ mirror_debian }} {{ ansible_distribution_release }} main non-free contrib
          deb {{ mirror_debian }} {{ ansible_distribution_release }}-updates main non-free contrib
          deb {{ mirror_debian }} {{ ansible_distribution_release }}-backports main non-free contrib
    - name: install docker-ce
      shell: |
        apt-get update && \
        apt-get -y install apt-transport-https ca-certificates curl gnupg2 software-properties-common && \
        curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - && \
        add-apt-repository "deb [arch=amd64] {{ mirror_docker_ce }}linux/debian $(lsb_release -cs) stable" && \
        apt-get -y update && \
        docker_version="${docker_version:+=$(apt-cache madison docker-ce | while IFS=' |' read -r _ v _; do [[ "$v" = "$docker_version"* ]] && echo "$v" && exit 0; done || echo "$docker_version" )}" && \
        echo apt-get -y install "docker-ce$docker_version" && \
        apt-get -y install "docker-ce$docker_version"
      environment:
        docker_version: "{{ docker_version }}"  
      args: 
        executable: /bin/bash
    - name: service start docker
      service: name=docker state=started
    - name: reload ansible_local
      setup: filter=ansible_local
